!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BUFF_SIZE	libft/gnl/includes/ft_gnl.h	/^# define BUFF_SIZE /;"	d	language:C
CC	Makefile	/^CC = gcc$/;"	m	language:Make
CC	libft/gnl/Makefile	/^CC = gcc$/;"	m	language:Make
CC	libft/is/Makefile	/^CC = gcc$/;"	m	language:Make
CC	libft/lst/Makefile	/^CC = gcc$/;"	m	language:Make
CC	libft/mem/Makefile	/^CC = gcc$/;"	m	language:Make
CC	libft/printf/Makefile	/^CC = gcc$/;"	m	language:Make
CC	libft/put/Makefile	/^CC = gcc$/;"	m	language:Make
CC	libft/str/Makefile	/^CC = gcc$/;"	m	language:Make
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m	language:Make
CFLAGS	libft/gnl/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m	language:Make
CFLAGS	libft/is/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m	language:Make
CFLAGS	libft/lst/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m	language:Make
CFLAGS	libft/mem/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m	language:Make
CFLAGS	libft/printf/Makefile	/^CFLAGS =  -Wall -Wextra -Werror -Wconversion$/;"	m	language:Make
CFLAGS	libft/put/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m	language:Make
CFLAGS	libft/str/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m	language:Make
DirectoryOfThisScript	.ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f	language:Python
DirectoryOfThisScript	libft/.ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f	language:Python
FFILES	Makefile	/^FFILES = get_input.c main.c print_sol.c$/;"	m	language:Make
FILES	libft/gnl/Makefile	/^FILES = get_next_line.c$/;"	m	language:Make
FILES	libft/is/Makefile	/^FILES = ft_isalnum.c \\$/;"	m	language:Make
FILES	libft/lst/Makefile	/^FILES = ft_lstadd.c \\$/;"	m	language:Make
FILES	libft/mem/Makefile	/^FILES = ft_bzero.c \\$/;"	m	language:Make
FILES	libft/printf/Makefile	/^FILES = ft_printf.c \\$/;"	m	language:Make
FILES	libft/put/Makefile	/^FILES = ft_putchar.c \\$/;"	m	language:Make
FILES	libft/str/Makefile	/^FILES = ft_atoi.c \\$/;"	m	language:Make
FILLER_H	includes/filler.h	/^# define FILLER_H$/;"	d	language:C
FOBJS	Makefile	/^FOBJS = $(FFILES:.c=.o)$/;"	m	language:Make
FT_GNL_H	libft/gnl/includes/ft_gnl.h	/^# define FT_GNL_H$/;"	d	language:C
FT_IS_H	libft/is/includes/ft_is.h	/^# define FT_IS_H$/;"	d	language:C
FT_LST_H	libft/lst/includes/ft_lst.h	/^# define FT_LST_H$/;"	d	language:C
FT_MEM_H	libft/mem/includes/ft_mem.h	/^# define FT_MEM_H$/;"	d	language:C
FT_PRINTF_H	libft/printf/includes/ft_printf.h	/^# define FT_PRINTF_H$/;"	d	language:C
FT_PUT_H	libft/put/includes/ft_put.h	/^# define FT_PUT_H$/;"	d	language:C
FT_STR_H	libft/str/includes/ft_str.h	/^# define FT_STR_H$/;"	d	language:C
FlagsForFile	.ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f	language:Python
FlagsForFile	libft/.ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f	language:Python
GetCompilationInfoForFile	.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f	language:Python
GetCompilationInfoForFile	libft/.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f	language:Python
IDIR	Makefile	/^IDIR = includes\/$/;"	m	language:Make
IDIR	libft/gnl/Makefile	/^IDIR = ..\/includes\/$/;"	m	language:Make
IDIR	libft/is/Makefile	/^IDIR = ..\/includes\/$/;"	m	language:Make
IDIR	libft/lst/Makefile	/^IDIR = ..\/includes\/$/;"	m	language:Make
IDIR	libft/mem/Makefile	/^IDIR = ..\/includes\/$/;"	m	language:Make
IDIR	libft/printf/Makefile	/^IDIR = ..\/includes\/$/;"	m	language:Make
IDIR	libft/put/Makefile	/^IDIR = ..\/includes\/$/;"	m	language:Make
IDIR	libft/str/Makefile	/^IDIR = ..\/includes\/$/;"	m	language:Make
IsHeaderFile	.ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f	language:Python
IsHeaderFile	libft/.ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f	language:Python
LDIR	Makefile	/^LDIR = libft\/$/;"	m	language:Make
LIB	Makefile	/^LIB = $(LDIR)libft.a$/;"	m	language:Make
LIBFT_H	libft/includes/libft.h	/^# define LIBFT_H$/;"	d	language:C
NAME	Makefile	/^NAME = astadnik.filler$/;"	m	language:Make
NAME	libft/Makefile	/^NAME = libft.a$/;"	m	language:Make
NAME	libft/gnl/Makefile	/^NAME = gnl$/;"	m	language:Make
NAME	libft/is/Makefile	/^NAME = is$/;"	m	language:Make
NAME	libft/lst/Makefile	/^NAME = lst$/;"	m	language:Make
NAME	libft/mem/Makefile	/^NAME = mem$/;"	m	language:Make
NAME	libft/printf/Makefile	/^NAME = print$/;"	m	language:Make
NAME	libft/put/Makefile	/^NAME = put$/;"	m	language:Make
NAME	libft/str/Makefile	/^NAME = str$/;"	m	language:Make
OBJS	libft/Makefile	/^OBJS = get_next_line.o ft_isalnum.o ft_isalpha.o ft_isascii.o \\$/;"	m	language:Make
OBJS	libft/gnl/Makefile	/^OBJS = $(FILES:.c=.o)$/;"	m	language:Make
OBJS	libft/is/Makefile	/^OBJS = $(FILES:.c=.o)$/;"	m	language:Make
OBJS	libft/lst/Makefile	/^OBJS = $(FILES:.c=.o)$/;"	m	language:Make
OBJS	libft/mem/Makefile	/^OBJS = $(FILES:.c=.o)$/;"	m	language:Make
OBJS	libft/printf/Makefile	/^OBJS = $(FILES:.c=.o)$/;"	m	language:Make
OBJS	libft/put/Makefile	/^OBJS = $(FILES:.c=.o)$/;"	m	language:Make
OBJS	libft/str/Makefile	/^OBJS = $(FILES:.c=.o)$/;"	m	language:Make
ODIR	Makefile	/^ODIR = objs\/$/;"	m	language:Make
ODIR	libft/gnl/Makefile	/^ODIR = ..\/objs\/$/;"	m	language:Make
ODIR	libft/is/Makefile	/^ODIR = ..\/objs\/$/;"	m	language:Make
ODIR	libft/lst/Makefile	/^ODIR = ..\/objs\/$/;"	m	language:Make
ODIR	libft/mem/Makefile	/^ODIR = ..\/objs\/$/;"	m	language:Make
ODIR	libft/printf/Makefile	/^ODIR = ..\/objs\/$/;"	m	language:Make
ODIR	libft/put/Makefile	/^ODIR = ..\/objs\/$/;"	m	language:Make
ODIR	libft/str/Makefile	/^ODIR = ..\/objs\/$/;"	m	language:Make
Plateau	resources/filler_vm	/^class Plateau$/;"	c	language:Ruby
Player	resources/filler_vm	/^class Player$/;"	c	language:Ruby
SDIR	Makefile	/^SDIR = srcs\/$/;"	m	language:Make
SDIR	libft/gnl/Makefile	/^SDIR = srcs\/$/;"	m	language:Make
SDIR	libft/is/Makefile	/^SDIR = srcs\/$/;"	m	language:Make
SDIR	libft/lst/Makefile	/^SDIR = srcs\/$/;"	m	language:Make
SDIR	libft/mem/Makefile	/^SDIR = srcs\/$/;"	m	language:Make
SDIR	libft/printf/Makefile	/^SDIR = srcs\/$/;"	m	language:Make
SDIR	libft/put/Makefile	/^SDIR = srcs\/$/;"	m	language:Make
SDIR	libft/str/Makefile	/^SDIR = srcs\/$/;"	m	language:Make
SOURCE_EXTENSIONS	.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v	language:Python
SOURCE_EXTENSIONS	libft/.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v	language:Python
TARGETS	libft/Makefile	/^TARGETS = gnl \\$/;"	m	language:Make
Trace	resources/filler_vm	/^class Trace$/;"	c	language:Ruby
VFILES	Makefile	/^VFILES = visual_inp.c visualize.c$/;"	m	language:Make
VIS	Makefile	/^VIS = vis$/;"	m	language:Make
VISUAL_H	includes/visual.h	/^# define VISUAL_H$/;"	d	language:C
VOBJS	Makefile	/^VOBJS = $(VFILES:.c=.o)$/;"	m	language:Make
Vm_filler	resources/filler_vm	/^class	Vm_filler$/;"	c	language:Ruby
algo	srcs/print_sol.c	/^char		algo(const t_data data)$/;"	f	language:C
all_lose	resources/filler_vm	/^def all_lose(players, trace)$/;"	f	language:Ruby
apostrophe	libft/printf/includes/ft_printf.h	/^	unsigned char	apostrophe;$/;"	m	language:C	struct:s_printf_flags
base	libft/printf/includes/ft_printf.h	/^	char			base;$/;"	m	language:C	struct:s_printf_flags
calc_len	srcs/print_sol.c	/^static size_t	calc_len(t_data data, t_point cur)$/;"	f	language:C	file:
change_data	resources/filler_vm	/^	def change_data(row, col, char)$/;"	f	language:Ruby
check_neg	libft/printf/srcs/printf_flags_hand.c	/^static char			check_neg(t_printf_par *n, t_printf_flags flag)$/;"	f	language:C	file:
check_placement	resources/filler_vm	/^	def check_placement(row, col, char)$/;"	f	language:Ruby
check_pos	srcs/print_sol.c	/^static int	check_pos(const t_data data, t_point cur)$/;"	f	language:C	file:
compilation_database_folder	.ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v	language:Python
compilation_database_folder	libft/.ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v	language:Python
content	libft/lst/includes/ft_lst.h	/^	void			*content;$/;"	m	language:C	struct:s_list
content_size	libft/lst/includes/ft_lst.h	/^	size_t			content_size;$/;"	m	language:C	struct:s_list
conv	libft/printf/includes/ft_printf.h	/^	char			conv;$/;"	m	language:C	struct:s_printf_flags
count	libft/printf/srcs/printf_ptr.c	/^static size_t	count(t_list *head, t_list *lst)$/;"	f	language:C	file:
count	libft/str/srcs/ft_itoa.c	/^static unsigned long	count(int n)$/;"	f	language:C	file:
data	srcs/visualize.c	/^t_data	data;$/;"	v	language:C
database	.ycm_extra_conf.py	/^  database = None$/;"	v	language:Python
database	.ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v	language:Python
database	libft/.ycm_extra_conf.py	/^  database = None$/;"	v	language:Python
database	libft/.ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v	language:Python
doll	libft/printf/includes/ft_printf.h	/^	size_t			doll;$/;"	m	language:C	struct:s_printf_flags
end_player	resources/filler_vm	/^	def end_player(trace)$/;"	f	language:Ruby	class:Player
err	libft/printf/includes/ft_printf.h	/^	char			err;$/;"	m	language:C	struct:s_printf_flags
err_free	libft/printf/srcs/printf_make_str.c	/^static ssize_t	err_free(t_list **head, t_printf_par **params)$/;"	f	language:C	file:
exit_c	srcs/visualize.c	/^int exit_c(void)$/;"	f	language:C
f	libft/str/srcs/ft_strsplit.c	/^static void	f(char ***arr, size_t i)$/;"	f	language:C	file:
f	srcs/visualize.c	/^int	f()$/;"	f	language:C
field	includes/filler.h	/^	char	*field;$/;"	m	language:C	struct:s_data
field	includes/visual.h	/^	char	*field;$/;"	m	language:C	struct:s_data
fill	libft/str/srcs/ft_strsplit.c	/^static char	**fill(char const *s, char c, size_t am, char **rez)$/;"	f	language:C	file:
fill_rest	libft/gnl/srcs/get_next_line.c	/^static int		fill_rest(t_list *cur, char **line)$/;"	f	language:C	file:
fill_str	libft/printf/srcs/printf_memory.c	/^static void	fill_str(char *str, char *ptr, ssize_t i)$/;"	f	language:C	file:
flags	.ycm_extra_conf.py	/^flags = [$/;"	v	language:Python
flags	libft/.ycm_extra_conf.py	/^flags = [$/;"	v	language:Python
ft_asprintf	libft/printf/srcs/ft_printf.c	/^int	ft_asprintf(char **ret, const char *format, ...)$/;"	f	language:C
ft_atoi	libft/str/srcs/ft_atoi.c	/^int	ft_atoi(const char *s)$/;"	f	language:C
ft_bzero	libft/mem/srcs/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f	language:C
ft_dprintf	libft/printf/srcs/ft_printf.c	/^int	ft_dprintf(int fd, const char *format, ...)$/;"	f	language:C
ft_isalnum	libft/is/srcs/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	language:C
ft_isalpha	libft/is/srcs/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	language:C
ft_isascii	libft/is/srcs/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	language:C
ft_isdigit	libft/is/srcs/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	language:C
ft_isprint	libft/is/srcs/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	language:C
ft_isspace	libft/is/srcs/ft_isspace.c	/^int	ft_isspace(int c)$/;"	f	language:C
ft_iswhitespace	libft/is/srcs/ft_iswhitespace.c	/^int	ft_iswhitespace(int c)$/;"	f	language:C
ft_itoa	libft/str/srcs/ft_itoa.c	/^char					*ft_itoa(int n)$/;"	f	language:C
ft_lstadd	libft/lst/srcs/ft_lstadd.c	/^void	ft_lstadd(t_list **alst, t_list *elem)$/;"	f	language:C
ft_lstaddb	libft/lst/srcs/ft_lstaddb.c	/^void	ft_lstaddb(t_list **head, t_list *list)$/;"	f	language:C
ft_lstdel	libft/lst/srcs/ft_lstdel.c	/^void	ft_lstdel(t_list **alst, void (*del)(void *))$/;"	f	language:C
ft_lstdelnode	libft/lst/srcs/ft_lstdelnode.c	/^void		ft_lstdelnode(t_list **head, t_list *targ)$/;"	f	language:C
ft_lstdelone	libft/lst/srcs/ft_lstdelone.c	/^void	ft_lstdelone(t_list **aslt, void (*del)(void *))$/;"	f	language:C
ft_lstiter	libft/lst/srcs/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(t_list *elem))$/;"	f	language:C
ft_lstmap	libft/lst/srcs/ft_lstmap.c	/^t_list		*ft_lstmap(t_list *lst, t_list *(*f)(t_list *elem))$/;"	f	language:C
ft_lstnew	libft/lst/srcs/ft_lstnew.c	/^t_list	*ft_lstnew(void const *content, size_t content_size)$/;"	f	language:C
ft_lstpushb	libft/lst/srcs/ft_lstpushb.c	/^void	ft_lstpushb(t_list **list, void *content, size_t content_size)$/;"	f	language:C
ft_lstpushf	libft/lst/srcs/ft_lstpushf.c	/^void	ft_lstpushf(t_list **alst, void *content, size_t content_size)$/;"	f	language:C
ft_lsttostr	libft/lst/srcs/ft_lsttostr.c	/^char	*ft_lsttostr(t_list *head)$/;"	f	language:C
ft_memalloc	libft/mem/srcs/ft_memalloc.c	/^void	*ft_memalloc(size_t size)$/;"	f	language:C
ft_memccpy	libft/mem/srcs/ft_memccpy.c	/^void	*ft_memccpy(void *s1, void const *s2, int c, size_t n)$/;"	f	language:C
ft_memchr	libft/mem/srcs/ft_memchr.c	/^void	*ft_memchr(const void *str, int c, size_t n)$/;"	f	language:C
ft_memcmp	libft/mem/srcs/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	language:C
ft_memcpy	libft/mem/srcs/ft_memcpy.c	/^void	*ft_memcpy(void *str1, const void *str2, size_t n)$/;"	f	language:C
ft_memdel	libft/mem/srcs/ft_memdel.c	/^void	ft_memdel(void **ap)$/;"	f	language:C
ft_memdup	libft/mem/srcs/ft_memdup.c	/^void	*ft_memdup(void *src, size_t size)$/;"	f	language:C
ft_memmove	libft/mem/srcs/ft_memmove.c	/^void	*ft_memmove(void *s1, const void *s2, size_t n)$/;"	f	language:C
ft_memset	libft/mem/srcs/ft_memset.c	/^void	*ft_memset(void *str, int c, size_t n)$/;"	f	language:C
ft_printf	libft/printf/srcs/ft_printf.c	/^int	ft_printf(const char *format, ...)$/;"	f	language:C
ft_putchar	libft/put/srcs/ft_putchar.c	/^void	ft_putchar(char c)$/;"	f	language:C
ft_putchar_fd	libft/put/srcs/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	language:C
ft_putendl	libft/put/srcs/ft_putendl.c	/^void	ft_putendl(char const *s)$/;"	f	language:C
ft_putendl_fd	libft/put/srcs/ft_putendl_fd.c	/^void	ft_putendl_fd(char const *s, int fd)$/;"	f	language:C
ft_putnbr	libft/put/srcs/ft_putnbr.c	/^void	ft_putnbr(int n)$/;"	f	language:C
ft_putnbr_fd	libft/put/srcs/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	language:C
ft_putstr	libft/put/srcs/ft_putstr.c	/^void	ft_putstr(char const *str)$/;"	f	language:C
ft_putstr_fd	libft/put/srcs/ft_putstr_fd.c	/^void	ft_putstr_fd(char const *s, int fd)$/;"	f	language:C
ft_realloc	libft/mem/srcs/ft_realloc.c	/^void	*ft_realloc(void *ptr, size_t size_src, size_t size)$/;"	f	language:C
ft_strcat	libft/str/srcs/ft_strcat.c	/^char	*ft_strcat(char *s1, char *s2)$/;"	f	language:C
ft_strchr	libft/str/srcs/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	language:C
ft_strclr	libft/str/srcs/ft_strclr.c	/^void	ft_strclr(char *s)$/;"	f	language:C
ft_strcmp	libft/str/srcs/ft_strcmp.c	/^int	ft_strcmp(char const *s1, char const *s2)$/;"	f	language:C
ft_strcpy	libft/str/srcs/ft_strcpy.c	/^char	*ft_strcpy(char *s1, char const *s2)$/;"	f	language:C
ft_strdel	libft/str/srcs/ft_strdel.c	/^void	ft_strdel(char **as)$/;"	f	language:C
ft_strdup	libft/str/srcs/ft_strdup.c	/^char	*ft_strdup(const char *s)$/;"	f	language:C
ft_strequ	libft/str/srcs/ft_strequ.c	/^int	ft_strequ(char const *s1, char const *s2)$/;"	f	language:C
ft_striter	libft/str/srcs/ft_striter.c	/^void	ft_striter(char *s, void (*f)(char *))$/;"	f	language:C
ft_striteri	libft/str/srcs/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f	language:C
ft_strjoin	libft/str/srcs/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	language:C
ft_strlcat	libft/str/srcs/ft_strlcat.c	/^size_t	ft_strlcat(char *s1, char *s2, size_t size)$/;"	f	language:C
ft_strlen	libft/str/srcs/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/;"	f	language:C
ft_strmap	libft/str/srcs/ft_strmap.c	/^char	*ft_strmap(char const *s, char (*f)(char))$/;"	f	language:C
ft_strmapi	libft/str/srcs/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	language:C
ft_strncat	libft/str/srcs/ft_strncat.c	/^char	*ft_strncat(char *s1, char *s2, size_t n)$/;"	f	language:C
ft_strncmp	libft/str/srcs/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	language:C
ft_strncpy	libft/str/srcs/ft_strncpy.c	/^char	*ft_strncpy(char *s1, char *s2, size_t len)$/;"	f	language:C
ft_strnequ	libft/str/srcs/ft_strnequ.c	/^int	ft_strnequ(char const *s1, char const *s2, size_t n)$/;"	f	language:C
ft_strnew	libft/str/srcs/ft_strnew.c	/^char	*ft_strnew(size_t size)$/;"	f	language:C
ft_strnstr	libft/str/srcs/ft_strnstr.c	/^char	*ft_strnstr(const char *s1, const char *s2, size_t len)$/;"	f	language:C
ft_strrchr	libft/str/srcs/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	language:C
ft_strsplit	libft/str/srcs/ft_strsplit.c	/^char		**ft_strsplit(char const *s, char c)$/;"	f	language:C
ft_strsrch	libft/str/srcs/ft_strsrch.c	/^ssize_t	ft_strsrch(const char *str, char c)$/;"	f	language:C
ft_strstr	libft/str/srcs/ft_strstr.c	/^char	*ft_strstr(const char *s1, const char *s2)$/;"	f	language:C
ft_strsub	libft/str/srcs/ft_strsub.c	/^char	*ft_strsub(char const *s, unsigned int start, size_t len)$/;"	f	language:C
ft_strtrim	libft/str/srcs/ft_strtrim.c	/^char	*ft_strtrim(char const *s)$/;"	f	language:C
ft_tolower	libft/str/srcs/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	language:C
ft_toupper	libft/str/srcs/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	language:C
ft_vasprintf	libft/printf/srcs/ft_printf.c	/^int	ft_vasprintf(char **ret, const char *format, va_list arg)$/;"	f	language:C
ft_vdprintf	libft/printf/srcs/ft_printf.c	/^int	ft_vdprintf(int fd, const char *format, va_list arg)$/;"	f	language:C
g_arr	libft/printf/srcs/printf_flags_hand.c	/^static const t_printf_funcs	g_arr[6] = {$/;"	v	language:C	file:
g_colors	libft/printf/srcs/printf_fill_list.c	/^static const char	g_colors[17][2][15] = {$/;"	v	language:C	file:
g_conv	libft/printf/srcs/printf_parse.c	/^static const char	g_conv[21] = "sSpdDioOuUxXcCnbkrqm";$/;"	v	language:C	file:
g_counter	libft/printf/srcs/printf_fill_list.c	/^static int		g_counter;$/;"	v	language:C	file:
g_end	libft/printf/srcs/printf_fill_list.c	/^static size_t	g_end;$/;"	v	language:C	file:
g_flag	libft/printf/srcs/printf_parse.c	/^static const char	g_flag[8] = "#0-+ \\'";$/;"	v	language:C	file:
g_mod	libft/printf/srcs/printf_parse.c	/^static const char	g_mod[8][3] = {$/;"	v	language:C	file:
g_tail	libft/printf/srcs/printf_fill_list.c	/^static t_list	*g_tail;$/;"	v	language:C	file:
gene_piece	resources/filler_vm	/^	def gene_piece()$/;"	f	language:Ruby
get_input	srcs/get_input.c	/^void		get_input(t_data *data)$/;"	f	language:C
get_input	srcs/visual_inp.c	/^char		get_input(t_data *data)$/;"	f	language:C
get_next_line	libft/gnl/srcs/get_next_line.c	/^int				get_next_line(const int fd, char **line)$/;"	f	language:C
get_rest	libft/gnl/srcs/get_next_line.c	/^static int		get_rest(int fd, char **line, t_list **head)$/;"	f	language:C	file:
get_size	libft/printf/srcs/printf_flags_hand.c	/^static void			get_size(intmax_t *sizes, t_printf_par n,$/;"	f	language:C	file:
get_size_and_malloc	srcs/get_input.c	/^static void	get_size_and_malloc(t_data *data, char *buf)$/;"	f	language:C	file:
get_size_and_malloc	srcs/visual_inp.c	/^static void	*get_size_and_malloc(t_data *data, char *buf, void *mlx_ptr)$/;"	f	language:C	file:
get_token	srcs/get_input.c	/^static void	get_token(t_data *data)$/;"	f	language:C	file:
hash	libft/printf/includes/ft_printf.h	/^	unsigned char	hash;$/;"	m	language:C	struct:s_printf_flags
height	includes/filler.h	/^	int		height;$/;"	m	language:C	struct:s_data
height	includes/visual.h	/^	int		height;$/;"	m	language:C	struct:s_data
help	resources/filler_vm	/^	def help$/;"	f	language:Ruby	class:Vm_filler
i	libft/printf/includes/ft_printf.h	/^	uintmax_t		i;$/;"	m	language:C	union:u_printf_par
initialize	resources/filler_vm	/^	def	initialize(argv = nil)$/;"	f	language:Ruby	class:Vm_filler
initialize	resources/filler_vm	/^	def initialize(filename = "filler.trace")$/;"	f	language:Ruby	class:Trace
initialize	resources/filler_vm	/^	def initialize(map_path, seed, trace)$/;"	f	language:Ruby	class:Plateau
initialize	resources/filler_vm	/^	def initialize(path, char)$/;"	f	language:Ruby	class:Player
initialize	srcs/get_input.c	/^void		initialize(t_data *data)$/;"	f	language:C
initialize	srcs/visual_inp.c	/^void		initialize(t_data *data, void **win_ptr, void *mlx_ptr)$/;"	f	language:C
is_empty_col	resources/filler_vm	/^	def is_empty_col()$/;"	f	language:Ruby
is_empty_line	resources/filler_vm	/^	def is_empty_line()$/;"	f	language:Ruby
launch	resources/filler_vm	/^	def launch()$/;"	f	language:Ruby	class:Player
main	srcs/main.c	/^int	main()$/;"	f	language:C
main	srcs/visualize.c	/^int	main()$/;"	f	language:C
minus	libft/printf/includes/ft_printf.h	/^	unsigned char	minus;$/;"	m	language:C	struct:s_printf_flags
mlx_ptr	srcs/visualize.c	/^void	*mlx_ptr;$/;"	v	language:C
mode_interactive	resources/filler_vm	/^	def mode_interactive()$/;"	f	language:Ruby	class:Player
modif	libft/printf/includes/ft_printf.h	/^	unsigned char	modif[8];$/;"	m	language:C	struct:s_printf_flags
next	libft/lst/includes/ft_lst.h	/^	struct s_list	*next;$/;"	m	language:C	struct:s_list	typeref:struct:s_list::s_list
opponent	includes/filler.h	/^	char	opponent;$/;"	m	language:C	struct:s_data
opponent	includes/visual.h	/^	char	opponent;$/;"	m	language:C	struct:s_data
os	.ycm_extra_conf.py	/^import os$/;"	i	language:Python
os	libft/.ycm_extra_conf.py	/^import os$/;"	i	language:Python
p	libft/printf/includes/ft_printf.h	/^	void			*p;$/;"	m	language:C	union:u_printf_par
parse_ast	libft/printf/srcs/printf_parse2.c	/^static void	parse_ast(const char *str, size_t *i, t_printf_flags *flags,$/;"	f	language:C	file:
parse_conv	libft/printf/srcs/printf_parse.c	/^static int		parse_conv(const char *str, size_t *i, t_printf_flags *flags,$/;"	f	language:C	file:
parse_dot	libft/printf/srcs/printf_parse2.c	/^static void	parse_dot(const char *str, size_t *i, t_printf_flags *flags,$/;"	f	language:C	file:
parse_dot_ast	libft/printf/srcs/printf_parse2.c	/^static void	parse_dot_ast(const char *str, size_t *i, t_printf_flags *flags,$/;"	f	language:C	file:
parse_mod_and_fl	libft/printf/srcs/printf_parse.c	/^static int		parse_mod_and_fl(const char *str, size_t *i,$/;"	f	language:C	file:
parse_num	libft/printf/srcs/printf_parse2.c	/^static void	parse_num(const char *str, size_t *i, t_printf_flags *flags)$/;"	f	language:C	file:
past	libft/printf/includes/ft_printf.h	/^	size_t			past;$/;"	m	language:C	struct:s_printf_flags
piece_char	resources/filler_vm	/^	def piece_char(x, y)$/;"	f	language:Ruby
pifagor	srcs/print_sol.c	/^static ssize_t	pifagor(t_data data, size_t y, size_t x)$/;"	f	language:C	file:
player	includes/filler.h	/^	char	player;$/;"	m	language:C	struct:s_data
player	includes/visual.h	/^	char	player;$/;"	m	language:C	struct:s_data
player_win_trace	resources/filler_vm	/^	def player_win_trace(playername)$/;"	f	language:Ruby	class:Trace
plus	libft/printf/includes/ft_printf.h	/^	unsigned char	plus;$/;"	m	language:C	struct:s_printf_flags
prec	libft/printf/includes/ft_printf.h	/^	intmax_t		prec;$/;"	m	language:C	struct:s_printf_flags
print_map	srcs/main.c	/^void	print_map(t_data d)$/;"	f	language:C
printf_add_str	libft/printf/srcs/printf_fill_list.c	/^static void	printf_add_str(const char *start, size_t length, t_list **head)$/;"	f	language:C	file:
printf_caesar_size	libft/printf/srcs/printf_caesar.c	/^intmax_t	printf_caesar_size(t_printf_par par, t_printf_flags flag)$/;"	f	language:C
printf_caesar_write	libft/printf/srcs/printf_caesar.c	/^void		printf_caesar_write(char *str, t_printf_par par, intmax_t len,$/;"	f	language:C
printf_char_size	libft/printf/srcs/printf_char.c	/^intmax_t	printf_char_size(t_printf_par par, t_printf_flags flag)$/;"	f	language:C
printf_char_write	libft/printf/srcs/printf_char.c	/^void		printf_char_write(char *str, t_printf_par par, intmax_t len,$/;"	f	language:C
printf_colors	libft/printf/srcs/printf_fill_list.c	/^static void	printf_colors(const char *start, t_list **head)$/;"	f	language:C	file:
printf_fill_list	libft/printf/srcs/printf_fill_list.c	/^int			printf_fill_list(t_list **head, const char *format)$/;"	f	language:C
printf_flags_hand	libft/printf/srcs/printf_flags_hand.c	/^char				printf_flags_hand(t_list *lst, t_printf_par *params,$/;"	f	language:C
printf_get_printf_params	libft/printf/srcs/printf_get_params.c	/^void		printf_get_printf_params(t_printf_par *params, t_list *head,$/;"	f	language:C
printf_get_size	libft/printf/srcs/printf_get_params.c	/^static void	printf_get_size(t_printf_par *params, t_list *head)$/;"	f	language:C	file:
printf_get_size2	libft/printf/srcs/printf_get_params.c	/^static void	printf_get_size2(t_printf_par *params, t_printf_flags cur,$/;"	f	language:C	file:
printf_handler	libft/printf/srcs/printf_fill_list.c	/^static void	printf_handler(const char *str, t_list **head)$/;"	f	language:C	file:
printf_int_size	libft/printf/srcs/printf_int.c	/^intmax_t	printf_int_size(t_printf_par par, t_printf_flags flag)$/;"	f	language:C
printf_int_write	libft/printf/srcs/printf_int.c	/^void		printf_int_write(char *str, t_printf_par par, intmax_t len,$/;"	f	language:C
printf_lstnew	libft/printf/srcs/printf_funcs.c	/^t_list	*printf_lstnew(void *content, size_t content_size)$/;"	f	language:C
printf_lsttostr	libft/printf/srcs/printf_funcs.c	/^ssize_t	printf_lsttostr(t_list *head, char **ret)$/;"	f	language:C
printf_make_str	libft/printf/srcs/printf_make_str.c	/^ssize_t			printf_make_str(char **ret, const char *format, va_list arg)$/;"	f	language:C
printf_memory	libft/printf/srcs/printf_memory.c	/^char		printf_memory(t_list *lst, t_printf_par *params,$/;"	f	language:C
printf_parse	libft/printf/srcs/printf_parse.c	/^t_printf_flags	*printf_parse(const char *str, size_t *i, int *counter)$/;"	f	language:C
printf_parse_flag	libft/printf/srcs/printf_parse2.c	/^void		printf_parse_flag(const char *str, size_t *i, t_printf_flags *flags,$/;"	f	language:C
printf_process_conv	libft/printf/srcs/printf_process_conv.c	/^char	printf_process_conv(t_list *head, t_printf_par *params)$/;"	f	language:C
printf_ptr	libft/printf/srcs/printf_ptr.c	/^void			printf_ptr(t_list **head, t_list *lst, t_printf_par *params,$/;"	f	language:C
printf_pull_param	libft/printf/srcs/printf_get_params.c	/^static void	printf_pull_param(t_printf_par *param, va_list arg)$/;"	f	language:C	file:
printf_pull_param_2	libft/printf/srcs/printf_get_params.c	/^static void	printf_pull_param_2(t_printf_par *param, va_list arg)$/;"	f	language:C	file:
printf_row_str_size	libft/printf/srcs/printf_row_str.c	/^intmax_t	printf_row_str_size(t_printf_par par, t_printf_flags flag)$/;"	f	language:C
printf_row_str_write	libft/printf/srcs/printf_row_str.c	/^void		printf_row_str_write(char *str, t_printf_par par, intmax_t len,$/;"	f	language:C
printf_size	libft/printf/includes/ft_printf.h	/^	intmax_t		(*printf_size)(t_printf_par par, t_printf_flags flag);$/;"	m	language:C	struct:s_printf_funcs
printf_str_size	libft/printf/srcs/printf_str.c	/^intmax_t	printf_str_size(t_printf_par par, t_printf_flags flag)$/;"	f	language:C
printf_str_write	libft/printf/srcs/printf_str.c	/^void		printf_str_write(char *str, t_printf_par par, intmax_t len,$/;"	f	language:C
printf_time_size	libft/printf/srcs/printf_time.c	/^intmax_t	printf_time_size(t_printf_par par, t_printf_flags flag)$/;"	f	language:C
printf_time_write	libft/printf/srcs/printf_time.c	/^void		printf_time_write(char *str, t_printf_par par, intmax_t len,$/;"	f	language:C
printf_write	libft/printf/includes/ft_printf.h	/^	void			(*printf_write)(char *str, t_printf_par par, intmax_t len,$/;"	m	language:C	struct:s_printf_funcs
pull_things	libft/printf/srcs/printf_flags_hand.c	/^static t_printf_par	pull_things(t_printf_flags *flag, t_printf_par *params,$/;"	f	language:C	file:
put_rect	srcs/visualize.c	/^static void	put_rect(t_point pos, int color)$/;"	f	language:C	file:
put_stuff	libft/printf/srcs/printf_flags_hand.c	/^static char			*put_stuff(char *str, intmax_t *sizes, t_printf_flags flag)$/;"	f	language:C	file:
put_stuff	libft/printf/srcs/printf_row_str.c	/^static void	put_stuff(char **str, intmax_t *len, char *s)$/;"	f	language:C	file:
read_from_player	resources/filler_vm	/^	def read_from_player()$/;"	f	language:Ruby	class:Player
read_line	libft/gnl/srcs/get_next_line.c	/^static ssize_t	read_line(int fd, ssize_t f, char **line, size_t size)$/;"	f	language:C	file:
read_more	libft/gnl/srcs/get_next_line.c	/^static int		read_more(int fd, char **line, t_list **head)$/;"	f	language:C	file:
s	libft/printf/includes/ft_printf.h	/^	char			*s;$/;"	m	language:C	struct:s_printf_funcs
s_data	includes/filler.h	/^struct	s_data$/;"	s	language:C
s_data	includes/visual.h	/^struct	s_data$/;"	s	language:C
s_list	libft/lst/includes/ft_lst.h	/^typedef	struct		s_list$/;"	s	language:C
s_point	includes/filler.h	/^struct	s_point$/;"	s	language:C
s_point	includes/visual.h	/^struct	s_point$/;"	s	language:C
s_printf_flags	libft/printf/includes/ft_printf.h	/^typedef struct		s_printf_flags$/;"	s	language:C
s_printf_funcs	libft/printf/includes/ft_printf.h	/^typedef struct		s_printf_funcs$/;"	s	language:C
score_show	resources/filler_vm	/^	def score_show()$/;"	f	language:Ruby	class:Player
show_map	srcs/visualize.c	/^static void	show_map(t_data d)$/;"	f	language:C	file:
show_mapcontent	resources/filler_vm	/^	def show_mapcontent(fd, piece_char = nil, y = 0, x = 0)$/;"	f	language:Ruby
show_piececontent	resources/filler_vm	/^	def show_piececontent(fd)$/;"	f	language:Ruby
skip	srcs/visual_inp.c	/^static char	skip()$/;"	f	language:C	file:
small_map	resources/filler_vm	/^	def small_map()$/;"	f	language:Ruby
space	libft/printf/includes/ft_printf.h	/^	unsigned char	space;$/;"	m	language:C	struct:s_printf_flags
stop	srcs/visualize.c	/^char	stop;$/;"	v	language:C
system	libft/printf/includes/ft_printf.h	/^	unsigned char	system;$/;"	m	language:C	struct:s_printf_flags
t_data	includes/filler.h	/^typedef	struct s_data t_data;$/;"	t	language:C	typeref:struct:s_data
t_data	includes/visual.h	/^typedef	struct s_data t_data;$/;"	t	language:C	typeref:struct:s_data
t_list	libft/lst/includes/ft_lst.h	/^}					t_list;$/;"	t	language:C	typeref:struct:s_list
t_point	includes/filler.h	/^typedef	struct s_point t_point;$/;"	t	language:C	typeref:struct:s_point
t_point	includes/visual.h	/^typedef	struct s_point t_point;$/;"	t	language:C	typeref:struct:s_point
t_printf_flags	libft/printf/includes/ft_printf.h	/^}					t_printf_flags;$/;"	t	language:C	typeref:struct:s_printf_flags
t_printf_funcs	libft/printf/includes/ft_printf.h	/^}					t_printf_funcs;$/;"	t	language:C	typeref:struct:s_printf_funcs
t_printf_par	libft/printf/includes/ft_printf.h	/^}					t_printf_par;$/;"	t	language:C	typeref:union:u_printf_par
the_end	resources/filler_vm	/^	def the_end(players)$/;"	f	language:Ruby	class:Trace
tok_height	includes/filler.h	/^	int		tok_height;$/;"	m	language:C	struct:s_data
tok_height	includes/visual.h	/^	int		tok_height;$/;"	m	language:C	struct:s_data
tok_width	includes/filler.h	/^	int		tok_width;$/;"	m	language:C	struct:s_data
tok_width	includes/visual.h	/^	int		tok_width;$/;"	m	language:C	struct:s_data
token	includes/filler.h	/^	char	*token;$/;"	m	language:C	struct:s_data
token	includes/visual.h	/^	char	*token;$/;"	m	language:C	struct:s_data
trace_msg	resources/filler_vm	/^	def trace_msg(msg)$/;"	f	language:Ruby	class:Trace
u_printf_par	libft/printf/includes/ft_printf.h	/^typedef union		u_printf_par$/;"	u	language:C
version	resources/filler_vm	/^	def version$/;"	f	language:Ruby	class:Vm_filler
wast	libft/printf/includes/ft_printf.h	/^	size_t			wast;$/;"	m	language:C	struct:s_printf_flags
width	includes/filler.h	/^	int		width;$/;"	m	language:C	struct:s_data
width	includes/visual.h	/^	int		width;$/;"	m	language:C	struct:s_data
width	libft/printf/includes/ft_printf.h	/^	intmax_t		width;$/;"	m	language:C	struct:s_printf_flags
win_ptr	srcs/visualize.c	/^void	*win_ptr;$/;"	v	language:C
write_to_player	resources/filler_vm	/^	def write_to_player(string)$/;"	f	language:Ruby	class:Player
x	includes/filler.h	/^	int	x;$/;"	m	language:C	struct:s_point
x	includes/visual.h	/^	int	x;$/;"	m	language:C	struct:s_point
y	includes/filler.h	/^	int	y;$/;"	m	language:C	struct:s_point
y	includes/visual.h	/^	int	y;$/;"	m	language:C	struct:s_point
ycm_core	.ycm_extra_conf.py	/^import ycm_core$/;"	i	language:Python
ycm_core	libft/.ycm_extra_conf.py	/^import ycm_core$/;"	i	language:Python
zero	libft/printf/includes/ft_printf.h	/^	unsigned char	zero;$/;"	m	language:C	struct:s_printf_flags
